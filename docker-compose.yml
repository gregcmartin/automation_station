services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nocodb:
    image: nocodb/nocodb:latest
    ports:
      - "8080:8080"
    environment:
      - NC_DB=pg://postgres:${POSTGRES_PASSWORD}@postgres:5432/nocodb
      - NC_META_DB=pg://postgres:${POSTGRES_PASSWORD}@postgres:5432/nocodb_meta
      - NC_REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - NC_PUBLIC_URL=http://localhost:8080
      - NC_AUTH_JWT_SECRET=secret
      - DATABASE_URL=pg://postgres:${POSTGRES_PASSWORD}@postgres:5432/nocodb
      - DATABASE_META_URL=pg://postgres:${POSTGRES_PASSWORD}@postgres:5432/nocodb_meta
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - nocodb_data:/usr/app/data
    networks:
      - app_network

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Chicago
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_USER_MANAGEMENT_DISABLED=true
      - NODE_ENV=development
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - app_network

volumes:
  nocodb_data:
  postgres_data:
  redis_data:
  n8n_data:

networks:
  app_network:
    driver: bridge